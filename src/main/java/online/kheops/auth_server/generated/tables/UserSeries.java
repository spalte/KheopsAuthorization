/*
 * This file is generated by jOOQ.
 */
package online.kheops.auth_server.generated.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import online.kheops.auth_server.generated.Indexes;
import online.kheops.auth_server.generated.Keys;
import online.kheops.auth_server.generated.Kheops;
import online.kheops.auth_server.generated.tables.records.UserSeriesRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserSeries extends TableImpl<UserSeriesRecord> {

    private static final long serialVersionUID = -321411890;

    /**
     * The reference instance of <code>kheops.user_series</code>
     */
    public static final UserSeries USER_SERIES = new UserSeries();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserSeriesRecord> getRecordType() {
        return UserSeriesRecord.class;
    }

    /**
     * The column <code>kheops.user_series.user_fk</code>.
     */
    public final TableField<UserSeriesRecord, Long> USER_FK = createField("user_fk", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>kheops.user_series.series_fk</code>.
     */
    public final TableField<UserSeriesRecord, Long> SERIES_FK = createField("series_fk", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>kheops.user_series</code> table reference
     */
    public UserSeries() {
        this(DSL.name("user_series"), null);
    }

    /**
     * Create an aliased <code>kheops.user_series</code> table reference
     */
    public UserSeries(String alias) {
        this(DSL.name(alias), USER_SERIES);
    }

    /**
     * Create an aliased <code>kheops.user_series</code> table reference
     */
    public UserSeries(Name alias) {
        this(alias, USER_SERIES);
    }

    private UserSeries(Name alias, Table<UserSeriesRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserSeries(Name alias, Table<UserSeriesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> UserSeries(Table<O> child, ForeignKey<O, UserSeriesRecord> key) {
        super(child, key, USER_SERIES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Kheops.KHEOPS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_SERIES_PRIMARY, Indexes.USER_SERIES_SERIES_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserSeriesRecord> getPrimaryKey() {
        return Keys.KEY_USER_SERIES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserSeriesRecord>> getKeys() {
        return Arrays.<UniqueKey<UserSeriesRecord>>asList(Keys.KEY_USER_SERIES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UserSeriesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserSeriesRecord, ?>>asList(Keys.USER_SERIES_IBFK_1, Keys.USER_SERIES_IBFK_2);
    }

    public Users users() {
        return new Users(this, Keys.USER_SERIES_IBFK_1);
    }

    public Series series() {
        return new Series(this, Keys.USER_SERIES_IBFK_2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserSeries as(String alias) {
        return new UserSeries(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserSeries as(Name alias) {
        return new UserSeries(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserSeries rename(String name) {
        return new UserSeries(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserSeries rename(Name name) {
        return new UserSeries(name, null);
    }
}
